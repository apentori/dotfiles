#!/usr/bin/env bash

GREEN='\x1b[32;01m'
YELLOW='\x1b[33;01m'
RED='\x1b[31;01m'
BLD='\x1b[1m'
RST='\x1b[0m'

PATH=$PATH:~/bin
FZF=$(which fzf)

show_help() {
    echo "$0 <pass_arguments> ..."
}

while getopts "h?a" opt; do
    case "$opt" in
        h|\?)
            show_help
            exit 0
            ;;
        a)  ANOTIFY=1
            shift
            ;;
    esac
done

PASS_LENGTH=16

PASS_ARGS="show"
if [[ -n "$@" ]]; then
    PASS_ARGS=$@
fi
FZF_OPTS='--prompt=pass> --select-1 --print-query --extended-exact'

if [[ -z $PASSWORD_STORE_DIR ]]; then
    PASSWORD_STORE_DIR="$HOME/.password-store"
fi
PASSWORD_STORE_KEY=$(cat ${PASSWORD_STORE_DIR}/.gpg-id)

FILES=$(find -L "${PASSWORD_STORE_DIR}" -type f -name "*.gpg")
ENTRIES=$(echo "${FILES}" | sed \
                            -e "s#${PASSWORD_STORE_DIR}/##" \
                            -e "s#.gpg##")

# Finally run FZF
OUTPUT=$(echo "$ENTRIES" | ${FZF} ${FZF_OPTS})

# save the query used
QUERY=$(echo "${OUTPUT}" | head -n 1)
RESULTS=$(echo "${OUTPUT}" | sed 1d)

if [[ -z "$QUERY" ]]; then
    echo "Cancelled"
    exit
fi

# if there are no results use query as a path to new entry
if [[ -z "${RESULTS}" ]]; then
    RESULTS=$QUERY
    PASS_ARGS="generate $PASS_LENGTH"
fi

echo -e "${YELLOW}${RESULTS}${RST}"
OUTPUT=$(pass ${PASS_ARGS} "${RESULTS}")
KEY=$(echo "${OUTPUT}" | head -n 1)
LOGIN=$(echo "${OUTPUT}" | grep -oP 'login: ?\K(.*)$')
REST=$(echo "${OUTPUT}" | sed 1d)

# Avoid clipmenud collecting secrets.
clipctl disable
echo -n "$KEY" | xsel -i --clipboard
if [[ -n "$LOGIN" ]]; then
    echo -n "$LOGIN" | xsel -i --primary
else
    echo -n "$KEY" | xsel -i --primary
fi
clipctl enable

if [[ $ANOTIFY ]]; then
    echo -e "${RESULTS}\n${REST}" | anotify -p
else
    echo -e "${KEY}\n${REST}"
fi
